apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: nvidia-network-operator
  namespace: flux-system
spec:
  interval: 120m
  url: https://helm.ngc.nvidia.com/nvidia
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nvidia-network-operator
  namespace: flux-system
spec:
  releaseName: nvidia-network-operator
  interval: 10m
  timeout: 10m
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
  targetNamespace: gpu-operator
  chart:
    spec:
      chart: network-operator
      version: v24.6.2
      sourceRef:
        kind: HelmRepository
        name: nvidia-network-operator
      interval: 10m
  valuesFrom:
    - kind: ConfigMap
      name: nvidia-network-operator
      valuesKey: values.yaml
      optional: true
  values:
    nebius:
      images:
        ulimitFixer: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/busybox:1.27.2
      ulimitFixer:
        tolerations: []

    nfd:
      enabled: false
      deployNodeFeatureRules: false

    upgradeCRDs: true

    sriovNetworkOperator:
      enabled: false

    # Node Feature discovery chart related values
    node-feature-discovery:
      image:
        repository: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/node-feature-discovery
        tag: v0.16.3
      enableNodeFeatureApi: true
      worker:
        serviceAccount:
          name: node-feature-discovery
          # disable creation to avoid duplicate serviceaccount creation by master spec below
          create: false
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: nebius.com/driverful
                      operator: NotIn
                      values:
                        - "true"
        tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
        config:
          sources:
            pci:
              deviceClassWhitelist:
              - "0300"
              - "0302"
              deviceLabelFields:
              - vendor
      master:
        serviceAccount:
          name: node-feature-discovery
          create: true
        config:
          extraLabelNs: ["nvidia.com"]

    # SR-IOV Network Operator chart related values
    sriov-network-operator:
      operator:
        resourcePrefix: "nvidia.com"
        admissionControllers:
          enabled: false
          certificates:
            secretNames:
              operator: "operator-webhook-cert"
              injector: "network-resources-injector-cert"
            certManager:
              # When enabled, makes use of certificates managed by cert-manager.
              enabled: true
              # When enabled, certificates are generated via cert-manager and then name will match the name of the secrets
              # defined above
              generateSelfSigned: true
            # If not specified, no secret is created and secrets with the names defined above are expected to exist in the
            # cluster. In that case, the ca.crt must be base64 encoded twice since it ends up being an env variable.
            custom:
              enabled: false

      # Image URIs for sriov-network-operator components
      images:
        operator: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/sriov-network-operator:network-operator-24.4.0
        sriovConfigDaemon: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/sriov-network-operator-config-daemon:network-operator-24.4.0
        sriovCni: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/sriov-cni:3e6368077716f6b8368b0e036a1290d1c64cf1fb
        ibSriovCni: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/ib-sriov-cni:fc002af57a81855542759d0f77d16dacd7e1aa38
        ovsCni: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/ovs-cni-plugin:6f8174b1a47c47657fe9e59fe448f2a452bb6960
        rdmaCni: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/rdma-cni:v1.1.0
        sriovDevicePlugin: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/sriov-network-device-plugin:e6ead1e8f76a407783430ee2666b403db2d76f64
        resourcesInjector: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/network-resources-injector:8810e6a127366cc1eb829d3f7cb3f866d096946e
        webhook: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/sriov-network-operator-webhook:network-operator-24.4.0
      # imagePullSecrest for SR-IOV Network Operator related images
      # imagePullSecrets: []
      sriovOperatorConfig:
        deploy: true
        configDaemonNodeSelector:
          beta.kubernetes.io/os: "linux"
          network.nvidia.com/operator.mofed.wait: "false"

    # General Operator related values
    # The operator element allows to deploy network operator from an alternate location
    operator:
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 5m
          memory: 64Mi
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Equal"
          value: ""
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Equal"
          value: ""
          effect: "NoSchedule"
      nodeSelector: {}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: "node-role.kubernetes.io/master"
                    operator: In
                    values: [""]
            - weight: 1
              preference:
                matchExpressions:
                  - key: "node-role.kubernetes.io/control-plane"
                    operator: In
                    values: [ "" ]
      repository: cr.eu-north1.nebius.cloud/marketplace
      image: nebius/network-operator-v24-4-0/network-operator
      # imagePullSecrets: []
      nameOverride: ""
      fullnameOverride: ""
      # tag, if defined will use the given image tag, else Chart.AppVersion will be used
      tag: v24.4.0
      cniBinDirectory: /opt/cni/bin
      useDTK: true
      admissionController:
        enabled: false
        useCertManager: true

    imagePullSecrets: [ ]

    # NicClusterPolicy CR values:
    deployCR: true
    ofedDriver:
      deploy: true
      image: nebius/network-operator-v24-4-0/mofed
      repository: cr.eu-north1.nebius.cloud/marketplace
      version: 23.10-2.1.3.1-10
      versionFake: 23.10-2.1.3.1-10-ubuntu20.04-amd64
      full_alternative_image: cr.eu-north1.nebius.cloud/marketplace/nebius/network-operator-v24-4-0/mofed:23.10-2.1.3.1-10-ubuntu22.04-amd64
      initContainer:
        enable: true
        repository: cr.eu-north1.nebius.cloud/marketplace
        image: nebius/network-operator-v24-4-0/network-operator-init-container
        version: v0.0.2
      terminationGracePeriodSeconds: 300
      # Private mirror repository configuration
      repoConfig:
        name: ""
      # Custom ssl key/certificate configuration
      certConfig:
        name: ""
      startupProbe:
        initialDelaySeconds: 10
        periodSeconds: 20
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 30
      readinessProbe:
        initialDelaySeconds: 10
        periodSeconds: 30
      upgradePolicy:
        # global switch for automatic upgrade feature
        # if set to false all other options are ignored
        autoUpgrade: false
        # how many nodes can be upgraded in parallel (default: 1)
        # 0 means no limit, all nodes will be upgraded in parallel
        maxParallelUpgrades: 1
        # cordon and drain (if enabled) a node before loading the driver on it
        safeLoad: false
        # options for node drain (`kubectl drain`) before the driver reload
        # if auto upgrade is enabled but drain.enable is false,
        # then driver POD will be reloaded immediately without
        # removing PODs from the node
        drain:
          enable: true
          force: true
          podSelector: ""
          # It's recommended to set a timeout to avoid infinite drain in case non-fatal error keeps happening on retries
          timeoutSeconds: 300
          deleteEmptyDir: true
        waitForCompletion:
          # specifies a label selector for the pods to wait for completion
          # podSelector: "app=myapp"
          # specify the length of time in seconds to wait before giving up for workload to finish, zero means infinite
          # timeoutSeconds: 300
      forcePrecompiled: false

    rdmaSharedDevicePlugin:
      deploy: false
      image: nebius/network-operator-v24-4-0/k8s-rdma-shared-dev-plugin
      repository: cr.eu-north1.nebius.cloud/marketplace
      version: 1.4.0
      useCdi: false
      resources:
        - name: rdma_shared_device_a
          vendors: [15b3]
          rdmaHcaMax: 63

    sriovDevicePlugin:
      deploy: false
      image: nebius/network-operator-v24-4-0/sriov-network-device-plugin
      repository: cr.eu-north1.nebius.cloud/marketplace
      version: e6ead1e8f76a407783430ee2666b403db2d76f64
      useCdi: false
      resources:
        - name: hostdev
          vendors: [15b3]

    ibKubernetes:
      deploy: false
      image: nebius/network-operator-v24-4-0/ib-kubernetes
      repository: cr.eu-north1.nebius.cloud/marketplace
      version: v1.0.2
      periodicUpdateSeconds: 5
      pKeyGUIDPoolRangeStart: "02:00:00:00:00:00:00:00"
      pKeyGUIDPoolRangeEnd: "02:FF:FF:FF:FF:FF:FF:FF"
      ufmSecret: '' # specify the secret name here

    nvIpam:
      deploy: false
      image: nebius/network-operator-v24-4-0/nvidia-k8s-ipam
      repository: cr.eu-north1.nebius.cloud/marketplace
      version: v0.1.2
      enableWebhook: false

    secondaryNetwork:
      deploy: false
      cniPlugins:
        deploy: true
        image: nebius/network-operator-v24-4-0/plugins
        repository: cr.eu-north1.nebius.cloud/marketplace
        version: v1.3.0

      multus:
        deploy: false
        image: nebius/network-operator-v24-4-0/multus-cni
        repository: cr.eu-north1.nebius.cloud/marketplace
        version: v3.9.3

      ipoib:
        deploy: false
        image: nebius/network-operator-v24-4-0/ipoib-cni
        repository: cr.eu-north1.nebius.cloud/marketplace
        version: 428715a57c0b633e48ec7620f6e3af6863149ccf

      ipamPlugin:
        deploy: false
        image: nebius/network-operator-v24-4-0/whereabouts
        repository: cr.eu-north1.nebius.cloud/marketplace
        version: v0.7.0


    nicFeatureDiscovery:
      deploy: false
      image: nebius/network-operator-v24-4-0/nic-feature-discovery
      repository: cr.eu-north1.nebius.cloud/marketplace
      version: v0.0.1


    docaTelemetryService:
      deploy: false
      image: nebius/network-operator-v24-4-0/doca_telemetry
      repository: cr.eu-north1.nebius.cloud/marketplace
      version: 1.16.5-doca2.6.0-host

    test:
      pf: ens2f0