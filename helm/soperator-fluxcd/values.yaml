helmRepository:
  interval: 3m
  soperator:
    url: oci://cr.eu-north1.nebius.cloud/soperator
    type: oci
  certManager:
    url: https://charts.jetstack.io
    type: default
  bedag:
    url: https://bedag.github.io/helm-charts
    type: default
  k8up:
    url: https://k8up-io.github.io/k8up
    type: default
  mariadbOperator:
    url: https://helm.mariadb.com/mariadb-operator
    type: default
  opentelemetry:
    url: https://open-telemetry.github.io/opentelemetry-helm-charts
    type: default
  prometheusOperator:
    url: https://prometheus-community.github.io/helm-charts
    type: default
  securityProfilesOperator:
    url: oci://cr.eu-north1.nebius.cloud/e00xdc03sb7gpqfd0a
    type: oci
  victoriaMetrics:
    url: https://victoriametrics.github.io/helm-charts/
    type: default
ns:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 2.0.0
certManager:
  enabled: true
  interval: 3m
  timeout: 3m
  version: v1.12.*
  namespace: "cert-manager-system"
  values: null
k8up:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 4.8.*
  namespace: "k8up-system"
  values:
    k8up:
      envVars:
        - name: BACKUP_SKIP_WITHOUT_ANNOTATION
          value: "true"
      env:
        K8UP_BACKUP_SKIP_WITHOUT_ANNOTATION: "true"
      image:
        repository: ghcr.io/vshn/k8up
        tag: v4.8.0
      metrics:
        grafanaDashboard:
          additionalLabels:
            grafana_dashboard: "1"
          enabled: true
          namespace: monitoring-system
        prometheusRule:
          enabled: false
        serviceMonitor:
          enabled: true
mariadbOperator:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 0.38.*
  values: null
nodeConfigurator:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 1.19.0
  values:
    nodeConfigurator:
      enabled: false
    rebooter:
      enabled: true
      generateRBAC: true
      logFormat: json
      tolerations:
        - operator: Exists
opentelemetry:
  enabled: true
  namespace: "logs-system"
  logs:
    version: 0.117.*
    interval: 3m
    timeout: 3m
    values: null
  events:
    version: 0.117.*
    interval: 3m
    timeout: 3m
    values: null
prometheusOperator:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 0.64.*
  namespace: "monitoring-system"
securityProfilesOperator:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 0.8.4-soperator
  values:
    daemon:
      tolerations:
        - operator: Exists
    enableAppArmor: true
    enableBpfRecorder: false
    enableLogEnricher: false
    enableProfiling: false
    enableSelinux: false
    replicaCount: 2
    spoImage:
      registry: gcr.io
      repository: k8s-staging-sp-operator/security-profiles-operator
      tag: v0.8.4
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
    verbosity: 0
slurmClusterStorage:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 1.19.0
slurmCluster:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 1.19.0
soperator:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 1.19.0
  values:
    certManager:
      enabled: true
    controllerManager:
      kubeRbacProxy:
        image:
          repository: gcr.io/kubebuilder/kube-rbac-proxy
          tag: v0.15.0
      manager:
        env:
          isApparmorCrdInstalled: true
          isMariadbCrdInstalled: true
          isPrometheusCrdInstalled: true
soperatorChecks:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 1.19.0
  namespace: "soperator-system"
  values: null
vmStack:
  enabled: true
  crds:
    interval: 3m
    timeout: 3m
    version: 0.0.3
  interval: 3m
  timeout: 3m
  version: 0.39.*
  namespace: "monitoring-system"
  values:
    alertmanager:
      enabled: false
    crds:
      enabled: false
    defaultRules:
      groups:
        etcd:
          create: false
        vmcluster:
          create: false
      rules:
        KubeHpaMaxedOut:
          create: false
        KubeMemoryOvercommit:
          create: false
        TooHighChurnRate24h:
          create: false
        TooManyScrapeErrors:
          create: false
    grafana:
      assertNoLeakedSecrets: false
      plugins:
        - https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
        - victoriametrics-logs-datasource
      sidecar:
        dashboards:
          searchNamespace: ALL
        datasources:
          searchNamespace: ALL
    kube-state-metrics:
      prometheusScrape: false
      selfMonitor:
        enabled: true
      vmServiceScrape:
        spec:
          endpoints:
            - honorLabels: true
              metricRelabelConfigs:
                - action: labeldrop
                  regex: (uid|container_id|image_id)
              port: http
            - honorLabels: true
              metricRelabelConfigs:
                - action: labeldrop
                  regex: (uid|container_id|image_id)
              port: metrics
          jobLabel: app.kubernetes.io/name
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: true
      vmScrape:
        spec:
          endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              port: http-metrics
              scheme: http
          jobLabel: jobLabel
          namespaceSelector:
            matchNames:
              - kube-system
    kubeScheduler:
      enabled: false
    kubelet:
      enabled: true
    prometheus-node-exporter:
      enabled: true
    victoria-metrics-operator:
      admissionWebhooks:
        enable: true
      crd:
        cleanup:
          enabled: false
        create: false
      operator:
        disable_prometheus_converter: false
        enable_converter_ownership: true
    vmagent:
      spec:
        extraArgs:
          promscrape.maxScrapeSize: "33554432"
    vmalert:
      enabled: false
    vmsingle:
      spec:
        extraArgs:
          dedup.minScrapeInterval: 30s
          maxLabelsPerTimeseries: "40"
          search.maxQueryLen: "18765"
          search.maxUniqueTimeseries: "500000"
        retentionPeriod: 30d
vmLogs:
  enabled: true
  interval: 3m
  timeout: 3m
  version: 0.9.*
  namespace: "logs-system"
  values:
    dashboards:
      enabled: true
      labels:
        grafana_dashboard: "1"
    server:
      persistentVolume:
        enabled: true
        size: 10Gi
      vmServiceScrape:
        enabled: true
    vector:
      enabled: false
