name: Checking Helm Chart

on:
  push:
    paths:
      - 'helm/**'

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

env:
  HELM_PATH: ./helm

jobs:
  pre-build:
    runs-on: self-hosted

    outputs:
      UNSTABLE: ${{ steps.set-env.outputs.unstable }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - name: Install Helm unittest plugin (if not exists)
        run: |
          if ! helm plugin list | grep -q unittest; then
            helm plugin install https://github.com/helm-unittest/helm-unittest
          else
            echo "Helm unittest plugin is already installed, skipping installation."
          fi
      
      - name: Run Helm unittest
        run: |
          # Iterate through all directories in HELM_PATH
          for dirpath in "${HELM_PATH}"/* ; do
            [ ! -d "${dirpath}" ] && continue
            HELM_CHART_NAME=$(basename "${dirpath}")
            echo "Processing chart: ${HELM_CHART_NAME}"
            echo "----------------------------------------"
            
            echo "Building dependencies for ${HELM_CHART_NAME}"
            helm dependency build "${HELM_PATH}/${HELM_CHART_NAME}"
            
            echo "Linting ${HELM_CHART_NAME}"
            helm lint "${HELM_PATH}/${HELM_CHART_NAME}"
            
            echo "Templating ${HELM_CHART_NAME}"
            helm template soperator "${HELM_PATH}/${HELM_CHART_NAME}" --namespace soperator
            
            echo "Running unit tests for ${HELM_CHART_NAME}"
            if [ -d "${HELM_PATH}/${HELM_CHART_NAME}/tests" ]; then
              helm unittest "${HELM_PATH}/${HELM_CHART_NAME}"
              if [ $? -ne 0 ]; then
                echo "Unit tests failed for chart: ${HELM_CHART_NAME}"
                exit 1
              fi
            else
              echo "No tests found for ${HELM_CHART_NAME}, skipping unit tests"
            fi
            
            echo "----------------------------------------"
          done


      - uses: engineerd/setup-kind@v0.6.2
        name: Setup kind
        with:
          version: "v0.27.0"
          image: "kindest/node:v1.30.10"

      - name: Testing umbrella chart soperator-fluxcd
        run: |
          helm install -n flux-system --create-namespace flux oci://ghcr.io/fluxcd-community/charts/flux2
          helm upgrade --install soperator-fluxcd ./helm/soperator-fluxcd --namespace soperator --create-namespace
          helm test soperator-fluxcd --namespace soperator
